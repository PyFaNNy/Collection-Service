@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
<h4>@Localizer["Users"]</h4>
<div class="inbox_people" >
    <div class="inbox_chat" id="users">
    </div>
</div>
<div class="mesgs">
    <div class="msg_history" id="messengeHistory">
        @if (ViewBag.Messenges != null)
            foreach (var messenge in ViewBag.Messenges)
            {
                if (messenge.Sender.Equals(User.Identity.Name))
                {
                    <div class="outgoing_msg">
                        <div class="sent_msg">
                            <p>
                                @messenge.messenge
                            </p>
                            <span class="time_date">@messenge.Time</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="incoming_msg">
                        <div class="incoming_msg_img"> <img src="@messenge.UrlImg" alt="sunil"> </div>
                        <div class="received_msg">
                            <div class="received_withd_msg">
                                <p>@messenge.messenge</p>
                                <span class="time_date">@messenge.Time</span>
                            </div>
                        </div>
                    </div>
                }
            }
    </div>
    <div class="type_msg">
        <div class="input_msg_write">
            <div class="row">
                <div class="col-md-4">
                    <input type="text" placeholder="@Localizer["TypeMessenge"]" class="form-control" id="messenge" />
                </div>
                <div class="col">
                    <button class="msg_send_btn" type="button" id="messengeBtn">@Localizer["Send"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/microsoft/signalr/dist/browser/signalr.min.js"></script>
<script>
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/Chat")
            .build();
        hubConnection.on('getMessenge', function (data) {
            var div = document.getElementById('messengeHistory');
            while (div.firstChild) {
                div.removeChild(div.firstChild);
            }
            for (i = 0; i < data.length; i++) {
                var user = data[i].sender;
                var messenge = data[i].messenge;
                var time = data[i].time;
                var divFirst = document.createElement("div")
                if (user == "@User.Identity.Name") {
                    divFirst.setAttribute("class", "outgoing_msg")
                    var divsm = document.createElement("div")
                    var p = document.createElement("p")
                    var span = document.createElement("span")
                    divsm.setAttribute("class", "sent_msg")
                    span.setAttribute("class", "outgoing_msg")
                    span.appendChild(document.createTextNode(time))
                    p.appendChild(document.createTextNode(messenge));
                    divsm.appendChild(p)
                    divsm.appendChild(span)
                    divFirst.appendChild(divsm)
                } else {
                    divFirst.setAttribute("class", "incoming_msg")
                    var src = data[i].urlImg;
                    var divimi = document.createElement("div")
                    var divrm = document.createElement("div")
                    var divrwm = document.createElement("div")
                    var p = document.createElement("p")
                    var span = document.createElement("span")
                    var img = document.createElement("img")
                    divimi.setAttribute("class", "incoming_msg_img")
                    divrm.setAttribute("class", "received_msg")
                    divrwm.setAttribute("class", "received_withd_msg")
                    img.setAttribute("src", src);
                    span.appendChild(document.createTextNode(time))
                    p.appendChild(document.createTextNode(messenge));
                    divrwm.appendChild(p)
                    divrwm.appendChild(span)
                    divrm.appendChild(divrwm)
                    divimi.appendChild(img)
                    divFirst.appendChild(divimi)
                    divFirst.appendChild(divrm)
                }
                div.appendChild(divFirst);
            }
        });
    hubConnection.on('getUsers', function (data)
    {
        var div = document.getElementById('users');
        while (div.firstChild) {
            div.removeChild(div.firstChild);
        }
        for (i = 0; i < data.length; i++) {
            var user = data[i].userName;
            var src = data[i].urlImg;
            var h5 = document.createElement("h5")
            var divcl = document.createElement("div")
            var divcp = document.createElement("div")
            var divcim = document.createElement("div")
            var divcib = document.createElement("div")
            var img = document.createElement("img")
            divcl.setAttribute("class", "chat_list")
            divcp.setAttribute("class", "chat_people")
            divcim.setAttribute("class", "chat_img")
            divcib.setAttribute("class", "chat_ib")
            img.setAttribute("src", src);
            h5.appendChild(document.createTextNode(user));
            divcib.appendChild(h5);
            divcim.appendChild(img);
            divcp.appendChild(divcib);
            divcp.appendChild(divcim);
            divcl.appendChild(divcp);
            div.appendChild(divcl);
        }
    });

        hubConnection.on('getConnected', function (data) {
            let name = "@User.Identity.Name";
            hubConnection.invoke("GetUser", name);
        });
        document.getElementById("messengeBtn").addEventListener("click", function (e) {
            let messenge = document.getElementById("messenge").value;
            let name="@User.Identity.Name";
            hubConnection.invoke("Messenge", messenge, name);
        });

        hubConnection.start();
</script>
